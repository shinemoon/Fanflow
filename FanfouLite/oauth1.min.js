async function fetchRequestToken(){const e=`${FANFOU_AUTH_BASE}/request_token`,t={oauth_consumer_key:CONSUMER_KEY,oauth_signature_method:"HMAC-SHA1",oauth_timestamp:OAuth1.generateTimestamp(),oauth_nonce:OAuth1.generateNonce(),oauth_version:"1.0"},o=generateOAuthSignature("GET",e,{},t,CONSUMER_SECRET);t.oauth_signature=o;const n={Authorization:OAuth1.buildAuthHeader(t)};try{const t=await fetch(e,{method:"GET",headers:n}),o=await t.text(),r=new URLSearchParams(o);var a=r.get("oauth_token");r.get("oauth_token_secret");return console.log("Request Token:",a),a}catch(e){return console.error("Failed to fetch request token:",e),null}}async function fetchAccessToken(e){const t=`${FANFOU_AUTH_BASE}/access_token`,o={oauth_consumer_key:CONSUMER_KEY,oauth_token:oauthRequestToken,oauth_signature_method:"HMAC-SHA1",oauth_timestamp:OAuth1.generateTimestamp(),oauth_nonce:OAuth1.generateNonce(),oauth_version:"1.0",oauth_verifier:e},n=generateOAuthSignature("GET",t,{},o,CONSUMER_SECRET);o.oauth_signature=n;const a={Authorization:OAuth1.buildAuthHeader(o)};try{const e=await fetch(t,{method:"GET",headers:a}),o=await e.text(),n=new URLSearchParams(o),r=n.get("oauth_token"),c=n.get("oauth_token_secret"),u={oauthToken:r,oauthTokenSecret:c};console.log("Access Token:",u),await storeToken(u)}catch(e){console.error("Failed to fetch access token:",e)}}async function storeToken(e){return new Promise(t=>{chrome.storage.local.set({fanfouToken:e},t)})}async function getStoredToken(){return new Promise(e=>{chrome.storage.local.get("fanfouToken",t=>{e(t.fanfouToken||null)})})}async function validateToken(e,t){try{const o=`${FANFOU_API_BASE}/account/verify_credentials.json`,n={oauth_consumer_key:CONSUMER_KEY,oauth_token:e,oauth_signature_method:"HMAC-SHA1",oauth_timestamp:OAuth1.generateTimestamp(),oauth_nonce:OAuth1.generateNonce(),oauth_version:"1.0"};let a=new URLSearchParams({mode:"default",format:"json"});const r=generateOAuthSignature("POST",o,{},n,CONSUMER_SECRET,t);n.oauth_signature=r;const c={Authorization:OAuth1.buildAuthHeader(n),"Content-Type":"application/json"},u=await fetch(o,{method:"POST",headers:c,body:a});if(u.ok){const e=await u.json();return curUsr=e,e}return console.log("Token invalid, clear it"),clearToken(),window.location.pathname.includes("popup.html")&&window.close(),!1}catch(e){return console.log(e),!1}}function clearToken(){chrome.storage.local.remove("fanfouToken",()=>{chrome.runtime.lastError?console.error("Error clearing token:",chrome.runtime.lastError):console.log("Token cleared successfully.")})}function createSignature(e,t,o=""){const n=`${encodeURIComponent(t)}&${encodeURIComponent(o)}`,a=CryptoJS.HmacSHA1(e,n).toString(CryptoJS.enc.Base64);return a}function createBaseString(e,t,o={},n={}){const a=new URL(t),r={...o};a.searchParams.forEach((e,t)=>{r[t]=e});for(const[e,t]of Object.entries(n))r[e]=t;const c=Object.keys(r).sort().map(e=>`${encodeURIComponent(e)}=${encodeURIComponent(r[e])}`).join("&");return`${e.toUpperCase()}&${encodeURIComponent(a.origin+a.pathname)}&${encodeURIComponent(c)}`}function generateOAuthSignature(e,t,o,n,a,r=""){const c=createBaseString(e,t,o,n);return createSignature(c,a,r)}function buildQueryString(e){return Object.entries(e).map(([e,t])=>`${encodeURIComponent(e)}=${encodeURIComponent(t)}`).join("&")}const FANFOU_API_BASE="http://api.fanfou.com",FANFOU_AUTH_BASE="http://fanfou.com/oauth",OAuth1={generateNonce:()=>Math.random().toString(36).substring(2),generateTimestamp:()=>Math.floor(Date.now()/1e3),percentEncode:e=>encodeURIComponent(e).replace(/[!*'()]/g,e=>"%"+e.charCodeAt(0).toString(16)),buildAuthHeader(e){const t=Object.keys(e).map(t=>`${this.percentEncode(t)}="${this.percentEncode(e[t])}"`).join(", ");return`OAuth ${t}`}};